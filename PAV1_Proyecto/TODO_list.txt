Nota - Comportamiento Extraño: Los nombres utilizados en las funciones .all() y .new_instance() de ObjetoDAO
	deben ser los mismos, sino la grilla se muestra vacia (aunque no tira excepcion...). Lo mismo pasa si se
	setea un valor por defecto invalido en algun ObjetoVO (ej un Double al que se le asigna un string "")

Tareas pendientes (Alta prioridad primero)

Proceso Compras (ABM complejo) 
	Hecho parcialmente.
	Implementar validaciones.
	
¿Un DetalleCompra deberia poder modificarse?
Proceso Ventas (ABM complejo)

Agregar campo nombre a producto en la base de datos y en el programa.

ABM ProductosxEquipos (Se puede incluir en Productos y/o Equipos con una CheckedListBox)

Validaciones estrictas de todos los ABM (Atencion a las FK cuando estan apuntadas no se puede borrar el elemento.)

Hacer menu desplegable en lugar de botones.

Hacer que el MaskedTextBox retorne lo que ingreso el usuario, sin los valores fijos de la mascara
	y ademas sea capaz de hacer lo opuesto (cargar un valor en la mascara)

Mejorar gestion de errores en las validaciones para hacerlos mas informativos.
	-- Probablemente sirva que is_valid retorne una lista de errores, o Nothing si es valido.

Unificar ABM's para funcionar con form's genericos -- Para poder cambiar la interfaz de todos los ABM a la vez.
Unificar Nomenclatura de varibles.

Tareas pendientes por clase:
- LabeledComboBoxAndList() : Implementar interfaz Validable.
- GrillaGenerica.execute_resize() : Cuando el tamaño es mayor al minimo requerido deberia ampliar todas las columnas
	por igual en lugar de la ultima.
- ObjetoVO : Tener composicion de objetos. Por cada FK tener una propiedad que retorne el ID y otra que retorne el objeto
	completo, puede que conociendo el ID 
- LabeledTextBox : La mascara porcentaje debe comunicarse con Double, pero mostrar al usuario una cadena con %
				 : Al crear un controlGenerico los labels deberian tener todos el tamaño minimo y no espacio en blanco
						al principio como en Equipo.
- GrupoDAO : Implementar interfaces, adaptar metodos a la interfaz. Usar controles genericos.
		   : Implementar interfaces usando transacciones. Actualmente lo ignora y no las admite.
- LabeledComboBox.resize_box() : Ajustar el ancho de la lista desplegable para mostrar todos los elementos completos.
	Si hay que recorrer los datos para buscar el más ancho, aprovechar el For de _source.
- GrupoDAO.update() : Falla si estamos cambiando el nombre y poniendo uno que ya existe para esa familia.
- frm_abm_generico_busqueda : Implementar atajos de teclado (Esc para salir, Enter en la grilla para modificar)
- Campo.MaskType : Agregar mascara que permita búsqueda.

Tareas pendientes generales:
- Adaptar todos los comboBox para que su value sea un objeto. Ver GananciaDAO como guia. Sino no funcionan.
- Mejorar rendimiento disminuyendo conversiones de tipos de datos. Tratar de que todos los objetos entiendan de ObjetoVO
	y simplificar su creacion a partir de DataTable.
- Ordenar las funciones para que siempre esten igual que lo indicado en la interfaz.
- Revisar que todos los DAO implementen transacciones y no las omitan (Que no creen otra instancia de DataBase
	si se le paso una por parametro.)
- Todos lo metodos de DAO que se comuniquen con la base de datos deben tener un parametro opcional db as DataBase = Nothing.
	Es para poder utilizarlos dentro de una transaccion.
- Corregir todas las referencias a metodos obsoletos. Si no hay referencias eliminar el metodo.
- Aplicar restricciones de longitud segun base de datos en cada get_IU_control.
- Agregar Reset() a la interfaz ObjetoCampo y usarlo en lugar de ResetText()


